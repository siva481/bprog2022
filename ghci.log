GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/nao/bprog2022/.ghci
2022-05-19 15:41:30.133988083
>>> 23*9
207
2022-05-19 15:54:17.643147613
>>> 55+6*8
103
2022-05-19 15:54:46.920110055
>>> (5/8)+9
9.625
2022-05-19 15:55:36.110106668
>>> 5-8-9+100
88
2022-05-19 15:55:45.667640045
>>> sqrt 2
1.4142135623730951
2022-05-19 15:59:06.517939809
>>> double 3

<interactive>:6:1: error: Variable not in scope: double :: t0 -> t
2022-05-19 16:02:06.765680481
>>> GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/nao/bprog2022/.ghci
2022-05-26 15:02:10.062019668
>>> maxBound :: int

<interactive>:1:1: error:
    • No instance for (Bounded int1) arising from a use of ‘maxBound’
      Possible fix:
        add (Bounded int1) to the context of
          an expression type signature:
            forall int1. int1
    • In the expression: maxBound :: int
      In an equation for ‘it’: it = maxBound :: int
2022-05-26 15:03:27.040560526
>>> maxBound :: Int
9223372036854775807
2022-05-26 15:04:00.09384076
>>> minBound :: Int
-9223372036854775808
2022-05-26 15:05:40.311162122
>>> :e src/First.hs
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
Ok, no modules loaded.
2022-05-26 15:49:05.060097585
>>> :l src/First.hs
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-05-26 15:49:05.119500655
>>> double 7
14
2022-05-26 15:56:27.842288118
>>> double 90
180
2022-05-26 15:56:34.934761416
>>> double (1*0)
0
2022-05-26 15:57:20.550525728
>>> :q
Leaving GHCi.
GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/nao/bprog2022/.ghci
2022-06-09 14:54:54.345495602
>>> (2+8)*7
70
2022-06-09 15:00:09.937112982
>>> sqrt

<interactive>:2:1: error:
    • No instance for (Show (Double -> Double))
        arising from a use of ‘print’
        (maybe you haven't applied a function to enough arguments?)
    • In a stmt of an interactive GHCi command: print it
2022-06-09 15:00:26.829860127
>>> :i sqrt
type Floating :: * -> Constraint
class Fractional a => Floating a where
  ...
  sqrt :: a -> a
  ...
  	-- Defined in ‘GHC.Float’
2022-06-09 15:00:42.773581261
>>> sprt (3^2+4^2)

<interactive>:4:1: error:
    • Variable not in scope: sprt :: t0 -> t
    • Perhaps you meant ‘sqrt’ (imported from Prelude)
2022-06-09 15:05:11.279424304
>>> sqrt(3^2+4^2)
5.0
2022-06-09 15:06:46.240060097
>>> sqrt(25::Int)

<interactive>:6:1: error:
    • No instance for (Floating Int) arising from a use of ‘sqrt’
    • In the expression: sqrt (25 :: Int)
      In an equation for ‘it’: it = sqrt (25 :: Int)
2022-06-09 15:08:12.239764553
>>> sqrt(25::Double)
5.0
2022-06-09 15:09:34.991291495
>>> hoge 25::Int

<interactive>:8:1: error: Variable not in scope: hoge :: t0 -> Int
2022-06-09 15:13:49.008645373
>>> head[1,2,3]
1
2022-06-09 15:46:28.687325237
>>> head[1,6,4,5,0]
1
2022-06-09 15:46:44.134151476
>>> head[]
*** Exception: Prelude.head: empty list
2022-06-09 15:48:41.959414426
>>> hoge=[1,6,4,5,0]::[Int]
2022-06-09 15:50:43.296661277
>>> hoge
[1,6,4,5,0]
2022-06-09 15:50:52.078499433
>>> head hoge
1
2022-06-09 15:51:25.833237264
>>> tail hoge
[6,4,5,0]
2022-06-09 15:51:43.10255043
>>> tail []
*** Exception: Prelude.tail: empty list
2022-06-09 15:52:31.828556172
>>> hoge !! 

<interactive>:17:9: error:
    parse error (possibly incorrect indentation or mismatched brackets)
2022-06-09 15:55:12.479831859
>>> hoge !! 2
4
2022-06-09 15:55:28.704050029
>>> hoge !! 0 
1
2022-06-09 15:55:46.757537022
>>> hoge !! 8
*** Exception: Prelude.!!: index too large
2022-06-09 15:56:15.374128747
>>> take 3 hoge
[1,6,4]
2022-06-09 15:56:28.097711137
>>> drop 3 hoge
[5,0]
2022-06-09 15:57:29.100559249
>>> take 10 hoge
[1,6,4,5,0]
2022-06-09 15:59:26.452314271
>>> drop 10 hoge
[]
2022-06-09 15:59:47.937453912
>>> length hoge
5
2022-06-09 16:01:02.153035693
>>> length []
0
2022-06-09 16:01:21.068667921
>>> sum hoge
16
2022-06-09 16:01:59.383638937
>>> product hoge
0
2022-06-09 16:03:00.710599997
>>> hoge++hoge
[1,6,4,5,0,1,6,4,5,0]
2022-06-09 16:04:41.844015917
>>> reverse hoge
[0,5,4,6,1]
2022-06-09 16:05:45.336936736
>>> :lord src/First.hs
unknown command ':lord'
use :? for help.
2022-06-09 16:07:41.440330648
>>> :e src/First.hs
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
Ok, no modules loaded.
2022-06-09 16:08:49.493036593
>>> :load src/First.hs
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-09 16:08:49.556851695
>>> double3+3

<interactive>:34:1: error:
    • Variable not in scope: double3
    • Perhaps you meant ‘double’ (line 4)
2022-06-09 16:10:28.085007723
>>> double 3+3
9
2022-06-09 16:10:42.220967968
>>> quadrouple (2+3)

<interactive>:36:1: error:
    Variable not in scope: quadrouple :: t0 -> t
2022-06-09 16:14:59.592905945
>>> quadrouple (2+3)

<interactive>:37:1: error:
    Variable not in scope: quadrouple :: t0 -> t
2022-06-09 16:16:01.026481709
>>> :e
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-09 16:19:14.760021254
>>> quadrouple (2+3)
20
2022-06-09 16:19:33.723917669
>>> :quit
Leaving GHCi.
GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/nao/bprog2022/.ghci
2022-06-16 15:03:30.531212997
>>> take3[3,1,4,1,5]

<interactive>:1:1: error:
    • Variable not in scope: take3 :: [a0] -> t
    • Perhaps you meant ‘take’ (imported from Prelude)
2022-06-16 15:04:22.882005315
>>> take 3 [3,1,4,1,5]
[3,1,4]
2022-06-16 15:04:49.270625671
>>> :e src/First.hs
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
Ok, no modules loaded.
2022-06-16 15:10:47.841532514
>>> :l src/First.hs
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-16 15:10:47.90933164
>>> double

<interactive>:5:1: error:
    • No instance for (Show (Int -> Int)) arising from a use of ‘print’
        (maybe you haven't applied a function to enough arguments?)
    • In a stmt of an interactive GHCi command: print it
2022-06-16 15:13:03.031933307
>>> take (double 2) [1,2,3,4]
[1,2,3,4]
2022-06-16 15:15:18.851596384
>>> [1 .. 10]
[1,2,3,4,5,6,7,8,9,10]
2022-06-16 15:20:57.582426532
>>> :e
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
   8  
   9  factorial :: Intger ->Intger
  10  factorial n = product [1 .. n]
[1 of 1] Compiling First            ( src/First.hs, interpreted )

src/First.hs:9:14: error:
    Not in scope: type constructor or class ‘Intger’
    Perhaps you meant ‘Integer’ (imported from Prelude)
  |
9 | factorial :: Intger ->Intger
  |              ^^^^^^

src/First.hs:9:23: error:
    Not in scope: type constructor or class ‘Intger’
    Perhaps you meant ‘Integer’ (imported from Prelude)
  |
9 | factorial :: Intger ->Intger
  |                       ^^^^^^
Failed, no modules loaded.
2022-06-16 15:21:08.090152265
>>> factorial 3

<interactive>:9:1: error:
    Variable not in scope: factorial :: t0 -> t
2022-06-16 15:22:08.492337686
>>> :e
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
   8  
   9  factorial :: Intger ->Intger
  10  factorial n = product [1 .. n]
[1 of 1] Compiling First            ( src/First.hs, interpreted )

src/First.hs:9:14: error:
    Not in scope: type constructor or class ‘Intger’
    Perhaps you meant ‘Integer’ (imported from Prelude)
  |
9 | factorial :: Intger ->Intger
  |              ^^^^^^

src/First.hs:9:23: error:
    Not in scope: type constructor or class ‘Intger’
    Perhaps you meant ‘Integer’ (imported from Prelude)
  |
9 | factorial :: Intger ->Intger
  |                       ^^^^^^
Failed, no modules loaded.
2022-06-16 15:24:49.480390984
>>> factorial 3

<interactive>:11:1: error:
    Variable not in scope: factorial :: t0 -> t
2022-06-16 15:25:32.310062954
>>> factorial 3 

<interactive>:12:1: error:
    Variable not in scope: factorial :: t0 -> t
2022-06-16 15:26:54.910993278
>>> factorial 3

<interactive>:13:1: error:
    Variable not in scope: factorial :: t0 -> t
2022-06-16 15:27:14.278348039
>>> :e
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
   8  
   9  factorial :: Integer -> Integer
  10  factorial n = product [1 .. n]
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-16 15:28:35.139696796
>>> factorial 3
6
2022-06-16 15:29:56.976664365
>>> :e
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
   8  
   9  factorial :: Integer -> Integer
  10  factorial n = product [1 .. n]
  11  
  12  average :: [Int] -> Int
  13  average xs = sum `div` length xs
  14  
  15  ave :: [Int] -> Int
  16  ave xs = div (sun xs)(length xs)
[1 of 1] Compiling First            ( src/First.hs, interpreted )

src/First.hs:16:15: error:
    • Variable not in scope: sun :: [Int] -> Int
    • Perhaps you meant one of these:
        ‘sum’ (imported from Prelude), ‘sin’ (imported from Prelude)
   |
16 | ave xs = div (sun xs)(length xs)
   |               ^^^
Failed, no modules loaded.
2022-06-16 15:38:11.298953299
>>> average [1,2,3,4,5]

<interactive>:17:1: error:
    Variable not in scope: average :: [a0] -> t
2022-06-16 15:38:36.65557063
>>> :e
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
   8  
   9  factorial :: Integer -> Integer
  10  factorial n = product [1 .. n]
  11  
  12  average :: [Int] -> Int
  13  average xs = sum `div` length xs
  14  
  15  ave :: [Int] -> Int
  16  ave xs = div (sum xs)(length xs)
[1 of 1] Compiling First            ( src/First.hs, interpreted )

src/First.hs:13:14: error:
    • Couldn't match expected type ‘Int’ with actual type ‘t0 a0 -> a0’
    • In the expression: sum `div` length xs
      In an equation for ‘average’: average xs = sum `div` length xs
   |
13 | average xs = sum `div` length xs
   |              ^^^^^^^^^^^^^^^^^^^

src/First.hs:13:24: error:
    • Couldn't match expected type ‘t0 a0 -> a0’ with actual type ‘Int’
    • Possible cause: ‘length’ is applied to too many arguments
      In the second argument of ‘div’, namely ‘length xs’
      In the expression: sum `div` length xs
      In an equation for ‘average’: average xs = sum `div` length xs
   |
13 | average xs = sum `div` length xs
   |                        ^^^^^^^^^
Failed, no modules loaded.
2022-06-16 15:39:36.467657022
>>> :e
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
   8  
   9  factorial :: Integer -> Integer
  10  factorial n = product [1 .. n]
  11  
  12  average :: [Int] -> Int
  13  average xs = sum `div` length xs
  14  
  15  ave :: [Int] -> Int
  16  ave xs = div (sum xs)(length xs)
[1 of 1] Compiling First            ( src/First.hs, interpreted )

src/First.hs:13:14: error:
    • Couldn't match expected type ‘Int’ with actual type ‘t0 a0 -> a0’
    • In the expression: sum `div` length xs
      In an equation for ‘average’: average xs = sum `div` length xs
   |
13 | average xs = sum `div` length xs
   |              ^^^^^^^^^^^^^^^^^^^

src/First.hs:13:24: error:
    • Couldn't match expected type ‘t0 a0 -> a0’ with actual type ‘Int’
    • Possible cause: ‘length’ is applied to too many arguments
      In the second argument of ‘div’, namely ‘length xs’
      In the expression: sum `div` length xs
      In an equation for ‘average’: average xs = sum `div` length xs
   |
13 | average xs = sum `div` length xs
   |                        ^^^^^^^^^
Failed, no modules loaded.
2022-06-16 15:40:31.277595431
>>> :e
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
   8  
   9  factorial :: Integer -> Integer
  10  factorial n = product [1 .. n]
  11  
  12  average :: [Int] -> Int
  13  average xs = sum  xs `div` length xs
  14  
  15  ave :: [Int] -> Int
  16  ave xs = div (sum xs)(length xs)
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-16 15:42:22.069046528
>>> average [1,2,3,4,5]
3
2022-06-16 15:42:51.597291666
>>> :t take 3 [1,2.3,4,5]
take 3 [1,2.3,4,5] :: Fractional a => [a]
2022-06-16 15:50:01.10749667
>>> init [1 .. 5]
[1,2,3,4]
2022-06-16 16:07:00.642171133
>>> :e
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
   8  
   9  factorial :: Integer -> Integer
  10  factorial n = product [1 .. n]
  11  
  12  average :: [Int] -> Int
  13  average xs = sum  xs `div` length xs
  14  
  15  ave :: [Int] -> Int
  16  ave xs = div (sum xs)(length xs)
  17  
  18  myinit :: [a] -> [a]
  19  myinit (x:[]) = []
  20  myinit (x:xs) = x : (init xs)
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-16 16:15:01.947167177
>>> myinit []
*** Exception: src/First.hs:(19,1)-(20,29): Non-exhaustive patterns in function myinit

2022-06-16 16:15:14.743722683
>>>  :q
Leaving GHCi.
GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/nao/bprog2022/.ghci
2022-06-23 14:56:10.213586559
>>> :i Num
type Num :: * -> Constraint
class Num a where
  (+) :: a -> a -> a
  (-) :: a -> a -> a
  (*) :: a -> a -> a
  negate :: a -> a
  abs :: a -> a
  signum :: a -> a
  fromInteger :: Integer -> a
  {-# MINIMAL (+), (*), abs, signum, fromInteger, (negate | (-)) #-}
  	-- Defined in ‘GHC.Num’
instance Num NominalDiffTime
  -- Defined in ‘time-1.9.3:Data.Time.Clock.Internal.NominalDiffTime’
instance Num DiffTime
  -- Defined in ‘time-1.9.3:Data.Time.Clock.Internal.DiffTime’
instance Num Word -- Defined in ‘GHC.Num’
instance Num Integer -- Defined in ‘GHC.Num’
instance Num Int -- Defined in ‘GHC.Num’
instance Num Float -- Defined in ‘GHC.Float’
instance Num Double -- Defined in ‘GHC.Float’
2022-06-23 14:56:27.872828387
>>> 1==2
False
2022-06-23 15:06:22.233851803
>>> 1<4
True
2022-06-23 15:06:30.516818098
>>> 1>1
False
2022-06-23 15:06:41.761575215
>>> 7>-1

<interactive>:5:2: error:
    • Variable not in scope: (>-) :: t0 -> t1 -> t
    • Perhaps you meant one of these:
        ‘-’ (imported from Prelude), ‘>=’ (imported from Prelude),
        ‘>>’ (imported from Prelude)
2022-06-23 15:06:54.631207684
>>> 'a' < 'b'
True
2022-06-23 15:11:23.4624568
>>> 'a' <'B'
False
2022-06-23 15:11:38.383590735
>>> '' 'a'

<interactive>:8:1: error:
    Parser error on `''`
    Character literals may not be empty
2022-06-23 15:12:09.18755535
>>> 1 /= 2
True
2022-06-23 15:15:58.635286898
>>> 1 /=1
False
2022-06-23 15:16:07.491651159
>>> :info abs
type Num :: * -> Constraint
class Num a where
  ...
  abs :: a -> a
  ...
  	-- Defined in ‘GHC.Num’
2022-06-23 15:30:15.412495073
>>> abs (-234)
234
2022-06-23 15:39:10.47790382
>>> abs

<interactive>:13:1: error:
    • No instance for (Show (Integer -> Integer))
        arising from a use of ‘print’
        (maybe you haven't applied a function to enough arguments?)
    • In a stmt of an interactive GHCi command: print it
2022-06-23 15:39:25.674876874
>>> GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/nao/bprog2022/.ghci
2022-06-30 14:56:38.27261393
>>> [ x ^ 2 | x <- [1 .. 5] ]
[1,4,9,16,25]
2022-06-30 15:01:57.99067598
>>> map (^2) [1..5]
[1,4,9,16,25]
2022-06-30 15:05:05.179195609
>>> [ x * 2 | x <- [1 .. 5] ]
[2,4,6,8,10]
2022-06-30 15:12:01.043375036
>>> [ x  `div` 2 | x <- [1 ..5 ]]
[0,1,1,2,2]
2022-06-30 15:13:50.042095749
>>> [ x  `divMod` 2 | x <- [1 ..5 ]]
[(0,1),(1,0),(1,1),(2,0),(2,1)]
2022-06-30 15:15:26.97977765
>>> > [(x,y) | x <- [1,2,3], y <- [4,5]]

<interactive>:6:1: error: parse error on input ‘>’
2022-06-30 15:20:37.850517777
>>> [ (x, y ) | x <- "abc" , y <- [4,5] ]
[('a',4),('a',5),('b',4),('b',5),('c',4),('c',5)]
2022-06-30 15:22:02.768791871
>>> [ (x, y ) | x <- "4,5" , y <- [abc] ]

<interactive>:8:32: error:
    • Variable not in scope: abc
    • Perhaps you meant ‘abs’ (imported from Prelude)
2022-06-30 15:22:37.891559953
>>> myconcat [[1,2,3],[4,5],[6,7,8,9]]

<interactive>:9:1: error:
    • Variable not in scope: myconcat :: [[a0]] -> t
    • Perhaps you meant one of these:
        ‘mconcat’ (imported from Prelude), ‘concat’ (imported from Prelude)
2022-06-30 15:28:48.389606825
>>> :e
No files to edit.
2022-06-30 15:29:30.20633689
>>> :l
Ok, no modules loaded.
2022-06-30 15:29:30.315826034
>>> :e src/First where
catn: src/First: openFile: does not exist (No such file or directory)
2022-06-30 15:30:05.592629899
>>> :l src/First where
target ‘where’ is not a module name or a source file
2022-06-30 15:30:05.658001505
>>> myconcat [[1,2,3],[4,5],[6,7,8,9]]

<interactive>:14:1: error:
    • Variable not in scope: myconcat :: [[a0]] -> t
    • Perhaps you meant one of these:
        ‘mconcat’ (imported from Prelude), ‘concat’ (imported from Prelude)
2022-06-30 15:31:19.073628743
>>> myconcat [[1,2,3],[4,5],[6,7,8,9]]

<interactive>:15:1: error:
    • Variable not in scope: myconcat :: [[a0]] -> t
    • Perhaps you meant one of these:
        ‘mconcat’ (imported from Prelude), ‘concat’ (imported from Prelude)
2022-06-30 15:35:43.639538833
>>> :e
No files to edit.
2022-06-30 15:38:08.865431398
>>> :e src/First.hs
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
   8  
   9  factorial :: Integer -> Integer
  10  factorial n = product [1 .. n]
  11  
  12  average :: [Int] -> Int
  13  average xs = sum  xs `div` length xs
  14  
  15  ave :: [Int] -> Int
  16  ave xs = div (sum xs)(length xs)
  17  
  18  myinit :: [a] -> [a]
  19  myinit (x:[]) = []
  20  myinit (x:xs) = x : (init xs)
  21  
  22  myconcat :: [[a]] -> [a]
  23  myconcat xss = [x | xs <- xss, x <- xs]
Ok, no modules loaded.
2022-06-30 15:38:30.406351886
>>> :l src/First.hs
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-30 15:38:30.507969638
>>> myconcat [[1,2,3],[4,5],[6,7,8,9]]
[1,2,3,4,5,6,7,8,9]
2022-06-30 15:38:38.242523806
>>> [ 1 | _ <- [1 ..5]]
[1,1,1,1,1]
2022-06-30 15:47:40.694265689
>>> :e src/First.hs
   1  module First where
   2  
   3  double :: Int ->Int
   4  double x = x + x
   5  
   6  quadrouple :: Int -> Int
   7  quadrouple x = double (double x)
   8  
   9  factorial :: Integer -> Integer
  10  factorial n = product [1 .. n]
  11  
  12  average :: [Int] -> Int
  13  average xs = sum  xs `div` length xs
  14  
  15  ave :: [Int] -> Int
  16  ave xs = div (sum xs)(length xs)
  17  
  18  myinit :: [a] -> [a]
  19  myinit (x:[]) = []
  20  myinit (x:xs) = x : (init xs)
  21  
  22  myconcat :: [[a]] -> [a]
  23  myconcat xss = [x | xs <- xss, x <- xs]
  24  
  25  mylength :: [a] -> Int
  26  mylength xs = sum [1 | _<- xs]
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-30 15:52:51.172912405
>>> :l src/First.hs
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-30 15:52:51.269706119
>>> putStrLn it

<interactive>:23:10: error:
    • Variable not in scope: it :: String
    • Perhaps you meant ‘id’ (imported from Prelude)
2022-06-30 15:56:52.227003524
>>> ['a'..'z']
"abcdefghijklmnopqrstuvwxyz"
2022-06-30 15:57:41.302556753
>>> ['あ'..'ん']
"\12354\12355\12356\12357\12358\12359\12360\12361\12362\12363\12364\12365\12366\12367\12368\12369\12370\12371\12372\12373\12374\12375\12376\12377\12378\12379\12380\12381\12382\12383\12384\12385\12386\12387\12388\12389\12390\12391\12392\12393\12394\12395\12396\12397\12398\12399\12400\12401\12402\12403\12404\12405\12406\12407\12408\12409\12410\12411\12412\12413\12414\12415\12416\12417\12418\12419\12420\12421\12422\12423\12424\12425\12426\12427\12428\12429\12430\12431\12432\12433\12434\12435"
2022-06-30 15:59:01.131649795
>>> putStrLn it
あぃいぅうぇえぉおかがきぎくぐけげこごさざしじすずせぜそぞただちぢっつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもゃやゅゆょよらりるれろゎわゐゑをん
2022-06-30 15:59:23.301680405
>>> :q
Leaving GHCi.
